from marshmallow import Schema, fields, validate

class AppointmentSchema(Schema):
    """Schema for serializing/deserializing Appointment data"""
    
    class Meta:
        strict = True  # Enable strict mode for better error handling

    id = fields.Int(
        dump_only=True,  # ID is typically generated by the server
        metadata={"description": "The unique identifier of the appointment"}
    )
    
    patient_name = fields.Str(
        required=True,
        validate=validate.Length(min=1, max=100),
        metadata={"description": "The name of the patient"}
    )
    
    doctor_name = fields.Str(
        required=True,
        validate=validate.Length(min=1, max=100),
        metadata={"description": "The name of the doctor"}
    )
    
    appointment_date = fields.DateTime(
        required=True,
        metadata={"description": "The date and time of the appointment"}
    )
    
    description = fields.Str(
        required=False,
        allow_none=True,
        validate=validate.Length(max=500),
        metadata={"description": "The reason for the appointment"}
    )
    
    status = fields.Str(
        required=False,
        dump_default="scheduled",  # Use dump_default instead of default
        validate=validate.OneOf([
            "scheduled", 
            "completed", 
            "cancelled", 
            "rescheduled"
        ]),
        metadata={"description": "The status of the appointment"}
    )

    department = fields.Str(    
        required=True,
        validate=validate.Length(min=1, max=100),
        metadata={"description": "The department of the appointment"}
    )

